{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/sahotag/Documents/Udemy/booking/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/sahotag/Documents/Udemy/booking/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/sahotag/Documents/Udemy/booking/client/context/index.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import \nimport { createContext, useReducer } from 'react'; // reducer\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case 'LOGOUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: null\n      });\n\n    default:\n      return state;\n  }\n}; // initial state \n\n\nvar initialState = {\n  user: null\n}; // create context\n\nvar Context = /*#__PURE__*/createContext({}); // context provider\n\nvar Provider = function Provider(_ref) {\n  var children = _ref.children;\n\n  var _userReducer = userReducer(reducer, initialState),\n      _userReducer2 = _slicedToArray(_userReducer, 2),\n      state = _userReducer2[0],\n      dispatch = _userReducer2[1];\n\n  var value = {\n    state: state,\n    dispatch: dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, _this);\n};\n\n_c = Provider;\nexport { Context, Provider };\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Users/sahotag/Documents/Udemy/booking/client/context/index.js"],"names":["createContext","useReducer","reducer","state","action","type","user","payload","initialState","Context","Provider","children","userReducer","dispatch","value"],"mappings":";;;;;;;;;;;AAAA;AACA,SAAQA,aAAR,EAAuBC,UAAvB,QAAwC,OAAxC,C,CAEA;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,OAAL;AACI,6CAAWF,KAAX;AAAkBG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAA/B;;AACJ,SAAK,QAAL;AACI,6CAAWJ,KAAX;AAAkBG,QAAAA,IAAI,EAAE;AAAxB;;AACJ;AACI,aAAOH,KAAP;AANR;AAQH,CATD,C,CAWA;;;AACA,IAAMK,YAAY,GAAG;AACjBF,EAAAA,IAAI,EAAE;AADW,CAArB,C,CAIA;;AACA,IAAMG,OAAO,gBAAGT,aAAa,CAAC,EAAD,CAA7B,C,CAEA;;AACA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,qBACHC,WAAW,CAACV,OAAD,EAAUM,YAAV,CADR;AAAA;AAAA,MACtBL,KADsB;AAAA,MACfU,QADe;;AAE7B,MAAMC,KAAK,GAAG;AAAEX,IAAAA,KAAK,EAALA,KAAF;AAASU,IAAAA,QAAQ,EAARA;AAAT,GAAd;AACA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC;AAAzB;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,CAJD;;KAAMJ,Q;AAMN,SAASD,OAAT,EAAkBC,QAAlB","sourcesContent":["// import \nimport {createContext, useReducer} from 'react';\n\n// reducer\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'LOGIN':\n            return {...state, user: action.payload};\n        case 'LOGOUT':\n            return {...state, user: null};\n        default: \n            return state;\n    }\n};\n\n// initial state \nconst initialState = {\n    user: null\n}\n\n// create context\nconst Context = createContext({});\n\n// context provider\nconst Provider = ({children}) => {\n    const [state, dispatch] = userReducer(reducer, initialState);\n    const value = { state, dispatch };\n    return <Context.Provider value={value}></Context.Provider>\n}\n\nexport { Context, Provider };"]},"metadata":{},"sourceType":"module"}