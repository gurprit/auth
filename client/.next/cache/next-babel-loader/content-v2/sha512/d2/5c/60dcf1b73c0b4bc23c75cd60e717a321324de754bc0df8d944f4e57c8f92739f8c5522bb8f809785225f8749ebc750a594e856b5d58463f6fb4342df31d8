{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sahotag/Documents/Udemy/booking/client/pages/reset-password.js\";\nimport { useState, useEffect, useContext } from 'react';\nimport firebase from '../firebase';\nimport { useRouter } from 'next/router';\nimport { Context } from '../context';\nimport { toast } from 'react-toastify';\n\nconst PasswordReset = () => {\n  const {\n    email,\n    setEmail\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    state: {\n      user\n    }\n  } = useContext(Context);\n  let router = useRouter();\n  useEffect(() => {\n    if (user !== null) {\n      router.push(\"/\");\n    }\n  }, [user]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const config = {\n      url: process.env.passwordResetRedirect,\n      handleCodeInApp: true\n    };\n    await firebase.auth().sendPasswordResetEmail(email, config).then(() => {\n      setEmail('');\n      setLoading(false);\n      toast(\"Check your email for password reset link\");\n    }).catch(error => {\n      setLoading(false);\n      toast(error.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-md-6 offset-md-3 p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: \"If you have already registered, you can enter your email address to recieive a password reset link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Type your email\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        disabled: !email || !loading,\n        children: loading ? \"processing...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\nexport default PasswordReset;","map":{"version":3,"sources":["/Users/sahotag/Documents/Udemy/booking/client/pages/reset-password.js"],"names":["useState","useEffect","useContext","firebase","useRouter","Context","toast","PasswordReset","email","setEmail","loading","setLoading","state","user","router","push","handleSubmit","e","preventDefault","config","url","process","env","passwordResetRedirect","handleCodeInApp","auth","sendPasswordResetEmail","then","catch","error","message","target","value"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA8BC,UAA9B,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,KAAR,QAAoB,gBAApB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACU,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AACEY,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADT,MAEEX,UAAU,CAACG,OAAD,CAFlB;AAII,MAAIS,MAAM,GAAGV,SAAS,EAAtB;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGY,IAAI,KAAK,IAAZ,EAAkB;AACdC,MAAAA,MAAM,CAACC,IAAP,CAAa,GAAb;AACH;AACJ,GAJQ,EAIN,CAACF,IAAD,CAJM,CAAT;;AAMJ,QAAMG,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMQ,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADN;AAEXC,MAAAA,eAAe,EAAE;AAFN,KAAf;AAKA,UAAMrB,QAAQ,CAACsB,IAAT,GAAgBC,sBAAhB,CAAuClB,KAAvC,EAA8CW,MAA9C,EACLQ,IADK,CACA,MAAM;AACRlB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACH,KALK,EAMLsB,KANK,CAMCC,KAAK,IAAI;AACZlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,MAAAA,KAAK,CAACuB,KAAK,CAACC,OAAP,CAAL;AACH,KATK,CAAN;AAUH,GAnBD;;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAMA;AAAM,MAAA,QAAQ,EAAEd,YAAhB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,KAAK,EAAER,KAHX;AAII,QAAA,QAAQ,EAAES,CAAC,IAAIR,QAAQ,CAACQ,CAAC,CAACc,MAAF,CAASC,KAAV,CAJ3B;AAKI,QAAA,WAAW,EAAC,iBALhB;AAMI,QAAA,SAAS;AANb;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,QAAQ,EAAE,CAACxB,KAAD,IAAU,CAACE,OAAzD;AAAA,kBACKA,OAAO,GAAG,eAAH,GAAqB;AADjC;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA7DD;;AA+DA,eAAeH,aAAf","sourcesContent":["import {useState, useEffect , useContext} from 'react';\nimport firebase from '../firebase';\nimport {useRouter} from 'next/router';\nimport {Context} from '../context';\nimport {toast} from 'react-toastify';\n\nconst PasswordReset = () => {\n    const {email, setEmail} = useState('');\n    const [loading, setLoading] = useState(false);\n    \n    const {\n            state: { user },\n        } = useContext(Context);\n    \n        let router = useRouter()\n        \n        useEffect(() => {\n            if(user !== null) {\n                router.push((\"/\"));\n            }    \n        }, [user]);\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        \n        const config = {\n            url: process.env.passwordResetRedirect, \n            handleCodeInApp: true,\n        };\n        \n        await firebase.auth().sendPasswordResetEmail(email, config)\n        .then(() => {\n            setEmail('');\n            setLoading(false);\n            toast(\"Check your email for password reset link\");\n        })\n        .catch(error => {\n            setLoading(false);\n            toast(error.message);\n        })\n    };\n    \n    return (\n        <div className=\"container col-md-6 offset-md-3 p-5\">\n            <h2>Reset Password</h2>\n        <p className=\"lead\">\n            If you have already registered, you can enter your email address to recieive a password reset link\n        </p>\n        \n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"email\" \n                className=\"form-control\" \n                value={email} \n                onChange={e => setEmail(e.target.value)} \n                placeholder=\"Type your email\"\n                autoFocus\n            />\n            <br />\n            <button className=\"btn btn-primary\" disabled={!email || !loading}>\n                {loading ? \"processing...\" : \"Submit\"} \n            </button>\n        \n        </form>\n        </div>\n    )\n}\n\nexport default PasswordReset;"]},"metadata":{},"sourceType":"module"}