{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/sahotag/Documents/Udemy/booking/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sahotag/Documents/Udemy/booking/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/sahotag/Documents/Udemy/booking/client/pages/reset-password.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport firebase from '../firebase';\nimport { useRouter } from 'next/router';\nimport { Context } from '../context';\nimport { toast } from 'react-toastify';\n\nvar PasswordReset = function PasswordReset() {\n  _s();\n\n  var _useState = useState(''),\n      email = _useState.email,\n      setEmail = _useState.setEmail;\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useContext = useContext(Context),\n      user = _useContext.state.user;\n\n  var router = useRouter();\n  useEffect(function () {\n    if (user !== null) {\n      router.push(\"/\");\n    }\n  }, [user]);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var config;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true);\n              config = {\n                url: process.env.passwordResetRedirect,\n                handleCodeInApp: true\n              };\n              _context.next = 5;\n              return firebase.auth().sendPasswordResetEmail(email, config).then(function () {\n                setEmail('');\n                setLoading(false);\n                toast(\"Check your email for password reset link\");\n              })[\"catch\"](function (error) {\n                setLoading(false);\n                toast(error.message);\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-md-6 offset-md-3 p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: \"If you have already registered, you can enter your email address to recieive a password reset link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        value: email,\n        onChange: function onChange(e) {\n          return setEmail(e.target.value);\n        },\n        placeholder: \"Type your email\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        disabled: !email || !loading,\n        children: loading ? \"processing...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PasswordReset, \"uDfUcb2vMIt2kQeEKUtFHlLDlIg=\", false, function () {\n  return [useRouter];\n});\n\n_c = PasswordReset;\nexport default PasswordReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"sources":["/Users/sahotag/Documents/Udemy/booking/client/pages/reset-password.js"],"names":["useState","useEffect","useContext","firebase","useRouter","Context","toast","PasswordReset","email","setEmail","loading","setLoading","user","state","router","push","handleSubmit","e","preventDefault","config","url","process","env","passwordResetRedirect","handleCodeInApp","auth","sendPasswordResetEmail","then","error","message","target","value"],"mappings":";;;;;;;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA8BC,UAA9B,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,KAAR,QAAoB,gBAApB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,kBACEP,QAAQ,CAAC,EAAD,CADV;AAAA,MACjBQ,KADiB,aACjBA,KADiB;AAAA,MACVC,QADU,aACVA,QADU;;AAAA,mBAEMT,QAAQ,CAAC,KAAD,CAFd;AAAA,MAEjBU,OAFiB;AAAA,MAERC,UAFQ;;AAAA,oBAMhBT,UAAU,CAACG,OAAD,CANM;AAAA,MAKPO,IALO,eAKhBC,KALgB,CAKPD,IALO;;AAQpB,MAAIE,MAAM,GAAGV,SAAS,EAAtB;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGW,IAAI,KAAK,IAAZ,EAAkB;AACdE,MAAAA,MAAM,CAACC,IAAP,CAAa,GAAb;AACH;AACJ,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;;AAMJ,MAAMI,YAAY;AAAA,wEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBA,cAAAA,CAAC,CAACC,cAAF;AACAP,cAAAA,UAAU,CAAC,IAAD,CAAV;AAEMQ,cAAAA,MAJW,GAIF;AACXC,gBAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,qBADN;AAEXC,gBAAAA,eAAe,EAAE;AAFN,eAJE;AAAA;AAAA,qBASXrB,QAAQ,CAACsB,IAAT,GAAgBC,sBAAhB,CAAuClB,KAAvC,EAA8CW,MAA9C,EACLQ,IADK,CACA,YAAM;AACRlB,gBAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,gBAAAA,KAAK,CAAC,0CAAD,CAAL;AACH,eALK,WAMC,UAAAsB,KAAK,EAAI;AACZjB,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,gBAAAA,KAAK,CAACsB,KAAK,CAACC,OAAP,CAAL;AACH,eATK,CATW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZb,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEA;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,eAMA;AAAM,MAAA,QAAQ,EAAEA,YAAhB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,KAAK,EAAER,KAHX;AAII,QAAA,QAAQ,EAAE,kBAACS,CAAD;AAAA,iBAAKR,QAAQ,CAACQ,CAAC,CAACa,MAAF,CAASC,KAAV,CAAb;AAAA,SAJd;AAKI,QAAA,WAAW,EAAC,iBALhB;AAMI,QAAA,SAAS;AANb;AAAA;AAAA;AAAA;AAAA,eADJ,eASI;AAAA;AAAA;AAAA;AAAA,eATJ,eAUI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,QAAQ,EAAE,CAACvB,KAAD,IAAU,CAACE,OAAzD;AAAA,kBACKA,OAAO,GAAG,eAAH,GAAqB;AADjC;AAAA;AAAA;AAAA;AAAA,eAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,aANA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAwBH,CA7DD;;GAAMH,a;UAQeH,S;;;KARfG,a;AA+DN,eAAeA,aAAf","sourcesContent":["import {useState, useEffect , useContext} from 'react';\nimport firebase from '../firebase';\nimport {useRouter} from 'next/router';\nimport {Context} from '../context';\nimport {toast} from 'react-toastify';\n\nconst PasswordReset = () => {\n    const {email, setEmail} = useState('');\n    const [loading, setLoading] = useState(false);\n    \n    const {\n            state: { user },\n        } = useContext(Context);\n    \n        let router = useRouter()\n        \n        useEffect(() => {\n            if(user !== null) {\n                router.push((\"/\"));\n            }    \n        }, [user]);\n    \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        \n        const config = {\n            url: process.env.passwordResetRedirect, \n            handleCodeInApp: true,\n        };\n        \n        await firebase.auth().sendPasswordResetEmail(email, config)\n        .then(() => {\n            setEmail('');\n            setLoading(false);\n            toast(\"Check your email for password reset link\");\n        })\n        .catch(error => {\n            setLoading(false);\n            toast(error.message);\n        })\n    };\n    \n    return (\n        <div className=\"container col-md-6 offset-md-3 p-5\">\n            <h2>Reset Password</h2>\n        <p className=\"lead\">\n            If you have already registered, you can enter your email address to recieive a password reset link\n        </p>\n        \n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"email\" \n                className=\"form-control\" \n                value={email} \n                onChange={(e)=>setEmail(e.target.value)} \n                placeholder=\"Type your email\"\n                autoFocus\n            />\n            <br />\n            <button className=\"btn btn-primary\" disabled={!email || !loading}>\n                {loading ? \"processing...\" : \"Submit\"} \n            </button>\n        \n        </form>\n        </div>\n    )\n}\n\nexport default PasswordReset;"]},"metadata":{},"sourceType":"module"}